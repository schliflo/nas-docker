version: '3'

services:
  #-----------------------------------#
  # PROXY                             #
  #-----------------------------------#
  proxy:
    build: ./apps/proxy
    container_name: proxy
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - proxy-certs:/etc/nginx/certs:ro
      - proxy-conf:/etc/nginx/conf.d
      - proxy-vhost:/etc/nginx/vhost.d
      - proxy-html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro


  #-----------------------------------#
  # LETSENCRYPT                       #
  #-----------------------------------#
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - proxy-certs:/etc/nginx/certs
      - proxy-conf:/etc/nginx/conf.d
      - proxy-vhost:/etc/nginx/vhost.d
      - proxy-html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro


  #-----------------------------------#
  # PLEX                              #
  #-----------------------------------#
  plex:
    image: plexinc/pms-docker
    container_name: plex
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    networks:
      - proxy-tier
      - default
    restart: unless-stopped
    volumes:
      - ./apps/plex/config:/config
      - ${STORAGE_PATH}/shares:/data
    tmpfs:
      - /tmp
      - /transcode
    hostname: ${PLEX_HOSTNAME}
    environment:
      - PUID=${DOCKER_USER_ID}
      - PGID=${DOCKER_USER_GROUP_ID}
      - TZ=${TIMEZONE}
      - ADVERTISE_IP=${PLEX_ADVERTISE_IP}
      - VIRTUAL_HOST=${PLEX_HOSTNAME},${PLEX_VIRTUAL_HOST}
      - VIRTUAL_PORT=32400
      - LETSENCRYPT_HOST=${PLEX_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}


  #-----------------------------------#
  # NEXTCLOUD                         #
  #-----------------------------------#
  nextcloud-db:
    image: mariadb
    container_name: nextcloud-db
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - nextcloud-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW

  nextcloud-app:
    build: ./apps/nextcloud/app
    container_name: nextcloud-app
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - nextcloud-core:/var/www/html
      - ./apps/nextcloud/app/apps:/var/www/html/apps
      - ./apps/nextcloud/app/config:/var/www/html/config
      - ./apps/nextcloud/app/themes:/var/www/html/themes
      - ${STORAGE_PATH}/cloud:/var/www/html/data
    environment:
      - MYSQL_HOST=nextcloud-db
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - REDIS_HOST=redis
    depends_on:
      - nextcloud-db
      - redis
      - elasticsearch
    links:
      - nextcloud-db
      - redis
      - elasticsearch

  nextcloud-web:
    build: ./apps/nextcloud/web
    container_name: nextcloud-web
    networks:
      - proxy-tier
      - default
    restart: unless-stopped
    volumes:
      - nextcloud-core:/var/www/html:ro
      - ./apps/nextcloud/app/apps:/var/www/html/apps:ro
      - ./apps/nextcloud/app/config:/var/www/html/config:ro
      - ./apps/nextcloud/app/themes:/var/www/html/themes:ro
      - ${STORAGE_PATH}/cloud:/var/www/html/data:ro
    environment:
      - VIRTUAL_HOST=${NEXTCLOUD_VIRTUAL_HOST}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${NEXTCLOUD_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - nextcloud-app
      - collabora
    links:
      - nextcloud-app
      - collabora

  nextcloud-cron:
    build: ./apps/nextcloud/app
    container_name: nextcloud-cron
    restart: unless-stopped
    volumes:
      - nextcloud-core:/var/www/html
      - ./apps/nextcloud/app/apps:/var/www/html/apps
      - ./apps/nextcloud/app/config:/var/www/html/config
      - ./apps/nextcloud/app/themes:/var/www/html/themes
      - ${STORAGE_PATH}/cloud:/var/www/html/data
    user: www-data
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-db
      - redis
      - elasticsearch
    links:
      - nextcloud-db
      - redis
      - elasticsearch

  redis:
    image: redis
    container_name: redis
    networks:
      - proxy-tier
      - default
    restart: unless-stopped

  collabora:
    image: collabora/code
    container_name: collabora
    cap_add:
      - MKNOD
    networks:
      - proxy-tier
    restart: unless-stopped
    environment:
      - domain=${NEXTCLOUD_VIRTUAL_HOST}

  elasticsearch:
    build: ./apps/nextcloud/elasticsearch
    container_name: elasticsearch
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node

  kibana:
    image: docker.elastic.co/kibana/kibana
    container_name: kibana
    networks:
      - proxy-tier
    restart: unless-stopped
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
      - VIRTUAL_HOST=${KIBANA_VIRTUAL_HOST}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${KIBANA_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - elasticsearch
    links:
      - elasticsearch


  #-----------------------------------#
  # HACKMD                            #
  #-----------------------------------#
  hackmd-db:
    image: postgres:10-alpine
    container_name: hackmd-db
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - hackmd-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=hackmd
      - POSTGRES_PASSWORD=${HACKMD_POSTGRES_PASSWORD}
      - POSTGRES_DB=hackmd

  hackmd-app:
    image: hackmdio/hackmd:alpine
    container_name: hackmd-app
    networks:
      - proxy-tier
    restart: unless-stopped
    environment:
      - HMD_DB_URL=postgres://hackmd:${HACKMD_POSTGRES_PASSWORD}@hackmd-db:5432/hackmd
      - HMD_USECDN=false
      - HMD_ALLOW_EMAIL_REGISTER=false
      - HMD_ALLOW_ANONYMOUS=false
      - HMD_ALLOW_PDF_EXPORT=true
      - VIRTUAL_HOST=${HACKMD_VIRTUAL_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${HACKMD_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - hackmd-db
    links:
      - hackmd-db


  #-----------------------------------#
  # GITEA                             #
  #-----------------------------------#
  gitea-app:
    image: gitea/gitea
    container_name: gitea-app
    ports:
      - 222:22
    networks:
      - proxy-tier
      - default
    restart: unless-stopped
    volumes:
      - ./apps/gitea/data:/data
      - ./apps/gitea/repositories:/var/lib/gitea/repositories
      - ./backup/gitea:/backup
    environment:
      - VIRTUAL_HOST=${GITEA_VIRTUAL_HOST}
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=${GITEA_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - DB_TYPE=mysql
      - DB_HOST=gitea-db:3306
      - DB_NAME=gitea
      - DB_USER=gitea
      - DB_PASSWD=${GITEA_MYSQL_PASSWORD}
    depends_on:
      - gitea-db
    links:
      - gitea-db

  gitea-db:
    image: mariadb
    container_name: gitea-db
    networks:
      - proxy-tier
      - default
    restart: unless-stopped
    volumes:
      - gitea-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${GITEA_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=gitea
      - MYSQL_USER=gitea
      - MYSQL_PASSWORD=${GITEA_MYSQL_PASSWORD}


  #-----------------------------------#
  # INVOICENINJA                      #
  #-----------------------------------#
  invoiceninja-app:
    image: invoiceninja/invoiceninja
    container_name: invoiceninja-app
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - invoiceninja-public:/var/www/app/public:rw
      - ./apps/invoiceninja/app/storage:/var/www/app/storage:rw
      - ./apps/invoiceninja/app/logo:/var/www/app/public/logo:rw
    environment:
      - TRUSTED_PROXIES="10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
      - REQUIRE_HTTPS=true"
      - APP_DEBUG=0
      - APP_URL=https://${INVOICENINJA_VIRTUAL_HOST}
      - APP_KEY=${INVOICENINJA_APP_KEY}
      - APP_CIPHER=AES-256-CBC
      - DB_USERNAME=ninja
      - DB_PASSWORD=${INVOICENINJA_MYSQL_PASSWORD}
      - DB_HOST=invoiceninja-db
      - DB_DATABASE=ninja
      - MAIL_HOST=${INVOICENINJA_MAIL_HOST}
      - MAIL_USERNAME=${INVOICENINJA_MAIL_USER}
      - MAIL_PASSWORD=${INVOICENINJA_MAIL_PASSWORD}
      - MAIL_DRIVER=smtp
      - MAIL_FROM_NAME="${INVOICENINJA_MAIL_FROM_NAME}"
      - MAIL_FROM_ADDRESS=${INVOICENINJA_MAIL_FROM_ADDRESS}
    depends_on:
      - invoiceninja-db
    links:
      - invoiceninja-db

  invoiceninja-cron:
    image: invoiceninja/invoiceninja
    container_name: invoiceninja-cron
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - invoiceninja-public:/var/www/app/public:rw
      - ./apps/invoiceninja/app/storage:/var/www/app/storage:rw
      - ./apps/invoiceninja/app/logo:/var/www/app/public/logo:rw
    environment:
      - TRUSTED_PROXIES="10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
      - REQUIRE_HTTPS=true
      - APP_DEBUG=0
      - APP_URL=https://${INVOICENINJA_VIRTUAL_HOST}
      - APP_KEY=${INVOICENINJA_APP_KEY}
      - APP_CIPHER=AES-256-CBC
      - DB_USERNAME=ninja
      - DB_PASSWORD=${INVOICENINJA_MYSQL_PASSWORD}
      - DB_HOST=invoiceninja-db
      - DB_DATABASE=ninja
      - MAIL_HOST=${INVOICENINJA_MAIL_HOST}
      - MAIL_USERNAME=${INVOICENINJA_MAIL_USER}
      - MAIL_PASSWORD=${INVOICENINJA_MAIL_PASSWORD}
      - MAIL_DRIVER=smtp
      - MAIL_FROM_NAME="${INVOICENINJA_MAIL_FROM_NAME}"
      - MAIL_FROM_ADDRESS=${INVOICENINJA_MAIL_FROM_ADDRESS}
    depends_on:
      - invoiceninja-db
    links:
      - invoiceninja-db
    entrypoint: |
      bash -c 'bash -s <<EOF
      trap "break;exit" SIGHUP SIGINT SIGTERM
      sleep 300s
      while /bin/true; do
        ./artisan ninja:send-invoices
        ./artisan ninja:send-reminders
        sleep 1d
      done
      EOF'

  invoiceninja-web:
    image: nginx:1
    container_name: invoiceninja-web
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - invoiceninja-public:/var/www/app/public:ro
      - ./apps/invoiceninja/web/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./apps/invoiceninja/app/storage:/var/www/app/storage:rw
      - ./apps/invoiceninja/app/logo:/var/www/app/public/logo:rw
    environment:
      - VIRTUAL_HOST=${INVOICENINJA_VIRTUAL_HOST}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${INVOICENINJA_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    depends_on:
      - invoiceninja-app
    links:
      - invoiceninja-app

  invoiceninja-db:
    image: mariadb
    container_name: invoiceninja-db
    networks:
      - proxy-tier
    restart: unless-stopped
    volumes:
      - invoiceninja-db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${INVOICENINJA_MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=ninja
      - MYSQL_USER=ninja
      - MYSQL_PASSWORD=${INVOICENINJA_MYSQL_PASSWORD}


  #-----------------------------------#
  # PYLOAD                            #
  #-----------------------------------#
  pyload:
    image: rootlogin/pyload:latest-git
    container_name: pyload
    networks:
      - proxy-tier
      - default
    restart: unless-stopped
    volumes:
      - ${STORAGE_PATH}/downloads:/downloads
      - ./apps/pyload/config:/config
    environment:
      - VIRTUAL_HOST=${PYLOAD_VIRTUAL_HOST}
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=${PYLOAD_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - UID=${DOCKER_USER_ID}
      - GID=${DOCKER_USER_GROUP_ID}


volumes:
  nextcloud-db:
  nextcloud-core:
  proxy-certs:
  proxy-conf:
  proxy-vhost:
  proxy-html:
  hackmd-db:
  elasticsearch:
  gitea-db:
  invoiceninja-public:
  invoiceninja-db:

networks:
  proxy-tier:
    external:
      name: nginx-proxy
